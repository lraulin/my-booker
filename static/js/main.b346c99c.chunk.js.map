{"version":3,"sources":["api.js","use-auth.js","Timecards.js","Inspector.js","ImageViewer.js","ViewTimecard.js","Login.jsx","PrivateRoute.jsx","AuthButton.js","CopyButton.jsx","lib.js","BookerUrl.jsx","HolidayPay.js","App.js","reportWebVitals.js","index.js"],"names":["authHeader","token","Authorization","fetchOneTimecard","id","a","timecardUrl","apiBaseUrl","console","log","fetch","headers","result","json","resbody","fetchTimecards","authorization","endDate","formatDate","Date","startDate","dateOffset","page","limit","skip","accept","referrer","referrerPolicy","body","method","mode","days","setDate","getDate","date","toISOString","slice","login","password","JSON","stringify","strategy","res","authContext","createContext","ProvideAuth","children","auth","useProvideAuth","Provider","value","useAuth","useContext","useState","localStorage","getItem","user","setUser","setToken","signin","email","accessToken","setItem","signout","removeItem","getUserName","tc","firstName","lastName","float","str","Number","parseFloat","getTotalAmount","amount","stipendPaymentAmount","toFixed","isSuperAdmin","timecard","details","workDate","startTime","endTime","lunchInMinutes","overtimeHours","doubletimeHours","weeklyHours","payRates","timecardPayRate","description","payRate","overtimePayRate","doubletimePayRate","stipends","stipendRuleAmount","stipendRuleDays","Timecards","timecards","setTimecards","total","setTotal","setPage","superOnly","setSuperOnly","isLoading","setIsLoading","history","useHistory","useEffect","tcs","parse","length","parseInt","row","createdAt","agency","type","status","timecardPhotoUrls","href","userId","target","rel","onClick","filter","t","style","visited","color","table","height","width","timeout","Table","striped","bordered","hover","map","header","min","onChange","e","Button","then","data","name","push","variant","paddingRight","getWorkerName","getPayRates","n","getRegularHours","overtimeAmount","doubletimeAmount","getTotalHours","getTotal","dateString","d","ampm","getHours","toDateString","getMinutes","toString","padStart","Inspector","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","plaintext","readOnly","defaultValue","facility","unitNumber","facilityManager","ImageViewer","active","setActive","pageItems","item","i","Pagination","Item","Image","src","url","alt","fluid","Prev","disabled","Next","ViewTimecard","props","setTc","count","setCount","query","URLSearchParams","useLocation","search","mounted","get","Object","keys","Container","xs","ButtonGroup","vertical","withRouter","setEmail","setPassword","location","from","state","pathname","handleLogin","event","preventDefault","replace","className","onSubmit","autoFocus","block","size","PrivateRoute","rest","render","to","AuthButton","CopyButton","text","updateClipboard","newClip","navigator","clipboard","writeText","icon","faClipboard","postData","Accept","response","getMonth","getFullYear","getQueryString","params","getTime","dateRangeType","key","join","BookerUrl","displayText","HolidayPay","output","setOutput","approvalNeeded","setApprovalNeeded","clearData","super_admin_list","split","filename","content","contentType","document","createElement","file","Blob","URL","createObjectURL","download","click","revokeObjectURL","downloadToFile","line","num","created","start","end","hrs","ot","rate","hol","pay","File","label","multiple","fileObj","files","reader","FileReader","readAsText","onload","reqBody","csv","onerror","error","uploadFile","handleNameClick","App","basename","Navbar","bg","Brand","Nav","Link","NavLink","path","component","Login","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b346c99c.chunk.js","sourcesContent":["const apiBaseUrl = 'https://app.snapnurse.com/api/v1';\n\nconst authHeader = (token) => ({\n  Authorization: 'Bearer ' + token,\n});\n\nexport const fetchOneTimecard = async (id, token) => {\n  const timecardUrl = apiBaseUrl + '/admin/timecards/' + id;\n  try {\n    console.log('Fetching one timecard from api...');\n    const result = await fetch(timecardUrl, { headers: authHeader(token) });\n    const resbody = await result.json();\n    console.log('Api response:');\n    console.log(resbody);\n    return resbody;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const fetchTimecards = async ({\n  authorization,\n  endDate = formatDate(new Date()),\n  startDate = formatDate(dateOffset(-14)),\n  page = 0,\n  limit = 100,\n}) => {\n  const skip = page * limit;\n  try {\n    console.log('Fetching from api...');\n    const result = await fetch(\n      `https://app.snapnurse.com/api/v1/admin/timecards?type=HOURLY&status[]=submitted&status[]=confirmed&status[]=preapproved&workDate[$gte]=${startDate}&workDate[$lte]=${endDate}&platformId=1&$limit=${limit}&$skip=${skip}&$sort[createdAt]=-1`,\n\n      {\n        headers: {\n          accept: 'application/json, text/plain, */*',\n          'accept-language': 'en-US,en;q=0.9',\n          authorization,\n          'if-none-match': 'W/\"87e67-gQagPz/QZeu/cqOYYc7FtOQM+Fc\"',\n          'sec-fetch-dest': 'empty',\n          'sec-fetch-mode': 'cors',\n          'sec-fetch-site': 'same-origin',\n          'sec-gpc': '1',\n        },\n        referrer: `https://app.snapnurse.com/admin/timecards?page=1&startDate=01/10/2021&endDate=01/22/2021&dateRangeType=workDate&type=HOURLY`,\n        referrerPolicy: 'strict-origin-when-cross-origin',\n        body: null,\n        method: 'GET',\n        mode: 'cors',\n        // credentials: 'include',\n      },\n    );\n    const resbody = await result.json();\n    console.log('Api response:');\n    console.log(resbody);\n    return resbody;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst dateOffset = (days) =>\n  new Date(new Date().setDate(new Date().getDate() + days));\n\n// YYYY-MM-DD\nconst formatDate = (date) => date.toISOString().slice(0, 10);\n\nexport const fetchAllTimecards = async ({\n  authorization,\n  endDate = formatDate(new Date()),\n  startDate = formatDate(dateOffset(-14)),\n  limit = 100,\n}) => {\n  let timecards = [];\n  let page = 0;\n  const maxRequests = 10;\n  let count = 0;\n  do {\n    count++;\n    const res = await fetchTimecards({\n      authorization,\n      startDate,\n      endDate,\n      page,\n      limit,\n    });\n    if (res.message && res.message.includes('Token expired')) {\n      console.log('Token expired');\n      return { success: false, tokenExpired: true };\n    }\n\n    if (res.data && res.data.length) {\n      timecards = timecards.concat(res.data);\n      page += limit;\n    } else {\n      break;\n    }\n  } while (count <= maxRequests);\n  const success = !!timecards.length;\n  return { success, timecards };\n};\n\nconst postData = async (url = '', data = {}) => {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    // mode: 'cors', // no-cors, *cors, same-origin\n    // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json',\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    // redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'strict-origin-when-cross-origin',\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n};\n\nexport const login = async (login = '', password = '') => {\n  try {\n    console.log('Logging in...');\n    const res = await fetch('https://app.snapnurse.com/api/v1/authentication', {\n      headers: {\n        accept: 'application/json, text/plain, */*',\n        'accept-language': 'en-US,en;q=0.9',\n        'content-type': 'application/json;charset=UTF-8',\n        'sec-fetch-dest': 'empty',\n        'sec-fetch-mode': 'cors',\n        'sec-fetch-site': 'same-origin',\n        'sec-gpc': '1',\n      },\n      referrer: 'https://app.snapnurse.com/login',\n      referrerPolicy: 'strict-origin-when-cross-origin',\n      body: JSON.stringify({ strategy: 'local', login, password }),\n      method: 'POST',\n      mode: 'cors',\n      // credentials: 'include',\n    });\n\n    console.log('Api response:');\n    const resbody = await res.json();\n    console.log(resbody);\n    return resbody;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { createContext, useContext, useState } from 'react';\nimport { login } from './api';\n\nexport const authContext = createContext(null);\n\nexport const ProvideAuth = ({ children }) => {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n};\n\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\nconst useProvideAuth = () => {\n  const [user, setUser] = useState(localStorage.getItem('user'));\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  const signin = async (email, password) => {\n    try {\n      console.log('Signing in from useProvideAuth...');\n      const res = await login(email, password);\n      console.log(res);\n      if (res.user && res.accessToken) {\n        console.log('Success!');\n        setUser(res.user);\n        localStorage.setItem('user', JSON.stringify(user));\n        setToken(res.accessToken);\n        localStorage.setItem('token', res.accessToken);\n      } else {\n        console.log('Login failure...');\n        console.log(res);\n      }\n    } catch (e) {\n      console.log('Unable to sign in...');\n      console.log(e);\n    }\n  };\n\n  const signout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  return {\n    user,\n    token,\n    signin,\n    signout,\n  };\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button, Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { fetchTimecards } from './api';\nimport { useAuth } from './use-auth';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst getUserName = (tc) =>\n  tc.user && tc.user.firstName + ' ' + tc.user.lastName;\n\nconst float = (str) => Number.parseFloat(str) || 0;\n\nconst getTotalAmount = (tc) =>\n  float(\n    (\n      float(tc.amount) +\n      // float(tc.overtimeAmount) +\n      // float(tc.doubletimeAmount) +\n      float(tc.stipendPaymentAmount)\n    ).toFixed(2),\n  );\n\n// Filter predicate\nconst isSuperAdmin = (timecard) => getTotalAmount(timecard) >= 2000;\n\nconst details = ({\n  workDate,\n  startTime,\n  endTime,\n  lunchInMinutes,\n  overtimeHours,\n  doubletimeHours,\n  weeklyHours,\n}) => (\n  <>\n    <div>\n      <strong>Start: </strong>\n      {startTime}\n    </div>\n    <div>\n      <strong>Stop: </strong>\n      {endTime}\n    </div>\n    <div>\n      <strong>Lunch: </strong>\n      {lunchInMinutes}\n    </div>\n    <div>\n      <strong>Overtime hours: </strong>\n      {overtimeHours}\n    </div>\n    {Number.parseFloat(doubletimeHours) ? (\n      <div>\n        <strong>Overtime hours: </strong>\n        {doubletimeHours}\n      </div>\n    ) : null}\n\n    <div>\n      <strong>Weekly hours: </strong>\n      {weeklyHours}\n    </div>\n  </>\n);\n\nconst payRates = ({ timecardPayRate }) => {\n  if (!timecardPayRate) return '';\n  const {\n    description,\n    payRate,\n    overtimePayRate,\n    doubletimePayRate,\n  } = timecardPayRate;\n  return `${description}\\n${payRate} / ${doubletimePayRate} / ${overtimePayRate}`;\n};\n\nconst stipends = ({\n  stipendPaymentAmount,\n  stipendRuleAmount,\n  stipendRuleDays,\n}) => {\n  if (!stipendRuleAmount) return '';\n  return `$${stipendPaymentAmount}\n  $${stipendRuleAmount} / ${stipendRuleDays}`;\n};\n\n/**\n * COMPONENT\n */\nfunction Timecards() {\n  const [timecards, setTimecards] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [superOnly, setSuperOnly] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const auth = useAuth();\n\n  const refresh = () => {\n    setIsLoading(true);\n    fetchTimecards({ authorization: auth.token, page: page - 1 }).then(\n      (res) => {\n        if (res.data && res.data.length) {\n          localStorage.setItem('timecards', JSON.stringify(res.data));\n          localStorage.setItem('total', JSON.stringify(res.total));\n          setTimecards(res.data);\n          setTotal(res.total);\n        } else if (res.name === 'Forbidden') {\n          console.log('Token expired. Signing out...');\n          auth.signout();\n          history.push('/');\n        } else {\n          console.log('Problem fetching timecards...');\n          console.log(res);\n        }\n        setIsLoading(false);\n      },\n    );\n  };\n\n  const toggleSuperOnly = () => setSuperOnly(!superOnly);\n\n  useEffect(() => {\n    const tcs = JSON.parse(localStorage.getItem('timecards'));\n    if (tcs && tcs.length) {\n      setTimecards(tcs);\n      setTotal(Number.parseInt(localStorage.getItem('total')));\n    }\n  }, []);\n\n  const row = (tc) =>\n    tc ? (\n      <tr key={tc.id}>\n        <td>{tc.workDate}</td>\n        <td>{tc.createdAt}</td>\n        <td>{getUserName(tc)}</td>\n        <td>{details(tc)}</td>\n        <td>{payRates(tc)}</td>\n        <td>{tc.agency}</td>\n        <td>{tc.type}</td>\n        <td>{tc.status}</td>\n        <td>{tc.timecardPhotoUrls ? tc.timecardPhotoUrls.length : ''}</td>\n        <td>{stipends(tc)}</td>\n        <td>${getTotalAmount(tc)}</td>\n        <td>\n          <a\n            href={`https://app.snapnurse.com/admin/timecards?type=HOURLY&dateRangeType=workDate&page=1&userId=${tc.userId}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            onClick={() =>\n              setTimecards(timecards.filter((t) => t.userId !== tc.userId))\n            }\n            style={tc.visited ? { color: 'red' } : null}\n          >\n            Open in Booker\n          </a>\n        </td>\n      </tr>\n    ) : null;\n\n  const table = isLoading ? (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  ) : (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          {[\n            'Work Date',\n            'Created At',\n            'Worker',\n            'Details',\n            'Pay Rates',\n            'Agency',\n            'Type',\n            'Status',\n            'Image',\n            'Stipend',\n            'Total',\n            'Inspect',\n          ].map((header) => (\n            <th>{header}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {superOnly\n          ? timecards.filter(isSuperAdmin).map(row)\n          : timecards.map(row)}\n      </tbody>\n    </Table>\n  );\n\n  return (\n    <div>\n      <input\n        type=\"number\"\n        value={page}\n        min=\"1\"\n        onChange={(e) => setPage(Number.parseInt(e.target.value))}\n      />\n      <Button onClick={refresh}>Fetch Timecards</Button>\n      <Button variant=\"secondary\" onClick={toggleSuperOnly}>\n        Show {superOnly ? 'All Timecards' : 'Only Super Admin'}\n      </Button>\n      <section id=\"timecardStats\">\n        <span style={{ paddingRight: '3em' }}>Total Timecards: {total}</span>\n        <span style={{ paddingRight: '3em' }}>\n          Admin Approvals (this page): {timecards.filter(isSuperAdmin).length}\n        </span>\n      </section>\n      {table}\n    </div>\n  );\n}\n\nexport default Timecards;\n","import React from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport './Inspector.css';\n\nconst getWorkerName = (tc) =>\n  tc.user ? tc.user.firstName + ' ' + tc.user.lastName : '';\n\nconst getPayRates = ({ timecardPayRate }) => {\n  if (!timecardPayRate) return '';\n  const {\n    description,\n    payRate,\n    overtimePayRate,\n    doubletimePayRate,\n  } = timecardPayRate;\n  return `${description}\\n${payRate} / ${doubletimePayRate} / ${overtimePayRate}`;\n};\n\nconst float = (n) => Number.parseFloat(n);\n\nconst getRegularHours = (tc) =>\n  (float(tc.amount) - float(tc.overtimeAmount) - float(tc.doubletimeAmount)) /\n  float(tc.timecardPayRate.payRate);\n\nconst getTotalHours = (tc) =>\n  getRegularHours(tc) + float(tc.overtimeHours) + float(tc.doubletimeHours);\n\nconst getTotal = (tc) =>\n  Number.parseFloat(tc.stipendPaymentAmount) + Number.parseFloat(tc.total);\n\nconst formatDate = (dateString = '') => {\n  const d = new Date(dateString);\n  const ampm = d.getHours() >= 12 ? 'pm' : 'am';\n  return (\n    d.toDateString() +\n    ' @ ' +\n    (d.getHours() % 12) +\n    ':' +\n    d.getMinutes().toString().padStart(2, '0') +\n    ' ' +\n    ampm +\n    ' (' +\n    d.getHours().toString().padStart(2, '0') +\n    d.getMinutes().toString().padStart(2, '0') +\n    ')'\n  );\n};\n\nconst Inspector = ({ tc }) => {\n  return (\n    <Form>\n      <Form.Group as={Row} controlId=\"formType\">\n        <Form.Label column sm=\"2\">\n          <strong>Type</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={tc.type} />\n        </Col>\n      </Form.Group>\n\n      {/* <Form.Group as={Row} controlId=\"formShiftDescription\">\n        <Form.Label column sm=\"2\">\n          Shift Description\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue=\"...\" />\n        </Col>\n      </Form.Group> */}\n\n      <Form.Group as={Row} controlId=\"formFacility\">\n        <Form.Label column sm=\"2\">\n          <strong>Facility</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue={tc.facility && tc.facility.name}\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formUnitNumber\">\n        <Form.Label column sm=\"2\">\n          <strong>Unit Number</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue={tc.unitNumber || '-'}\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formFacilityManager\">\n        <Form.Label column sm=\"2\">\n          <strong>Facility Manager</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue={tc.facilityManager || '-'}\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formPayRateDescription\">\n        <Form.Label column sm=\"2\">\n          <strong>Pay Rate Description</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue={\n              (tc.timecardPayRate && tc.timecardPayRate.description) || '-'\n            }\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formWorker\">\n        <Form.Label column sm=\"2\">\n          <strong>Worker</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={getWorkerName(tc)} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formStartShift\">\n        <Form.Label column sm=\"2\">\n          <strong>Start Shift</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue={formatDate(tc.startTime)}\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formEndShift\">\n        <Form.Label column sm=\"2\">\n          <strong>End Shift</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue={formatDate(tc.endTime)}\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formLunch\">\n        <Form.Label column sm=\"2\">\n          <strong>Lunch</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue={tc.lunchInMinutes + ' min'}\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formRegularHours\">\n        <Form.Label column sm=\"2\">\n          <strong>Regular Hours</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={getRegularHours(tc)} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formOvertimeHours\">\n        <Form.Label column sm=\"2\">\n          <strong>Overtime Hours</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue={float(tc.overtimeHours)}\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formTotalHoursWorked\">\n        <Form.Label column sm=\"2\">\n          <strong>Total Hours Worked</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={getTotalHours(tc)} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formRate\">\n        <Form.Label column sm=\"2\">\n          <strong>Rate</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={getPayRates(tc)} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formRegularPay\">\n        <Form.Label column sm=\"2\">\n          <strong>Regular Pay</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={'$' + tc.amount} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formOvertimePay\">\n        <Form.Label column sm=\"2\">\n          <strong>Overtime Pay</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue={'$' + tc.overtimeAmount}\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formNonTaxableAdjustment\">\n        <Form.Label column sm=\"2\">\n          <strong>Non Taxable Adjustment</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control defaultValue=\"Set non taxable adjustment for a worker\" />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formAdjustment\">\n        <Form.Label column sm=\"2\">\n          <strong>Adjustment</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue=\"Set adjustment if needed\"\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formMemo\">\n        <Form.Label column sm=\"2\">\n          <strong>Memo</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue=\"Additional notes can be here\"\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formStipend\">\n        <Form.Label column sm=\"2\">\n          <strong>Stipend(Pro-Rated)</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue={'$' + tc.stipendPaymentAmount}\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formTotal\">\n        <Form.Label column sm=\"2\">\n          <strong>Total</strong>\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={'$' + getTotal(tc)} />\n        </Col>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default Inspector;\n","import React, { useState } from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport Image from 'react-bootstrap/Image';\n\nconst ImageViewer = ({ timecardPhotoUrls }) => {\n  const [active, setActive] = useState(1);\n  const pageItems = timecardPhotoUrls.map((item, i) => (\n    <Pagination.Item key={item.id} active={i + 1 === active}>\n      {i + 1}\n    </Pagination.Item>\n  ));\n\n  const getImageUrl = () =>\n    timecardPhotoUrls && timecardPhotoUrls.length\n      ? timecardPhotoUrls[active - 1].url\n      : null;\n\n  const handleClickNext = () => {\n    if (active + 1 <= timecardPhotoUrls.length) {\n      setActive(active + 1);\n    }\n  };\n  const handleClickPrev = () => {\n    if (active - 1 >= 1) {\n      setActive(active - 1);\n    }\n  };\n\n  // useEffect(() => {\n  //   console.log('ImageViewer Component using Effect!');\n  //   setImage(\n  //     timecardPhotoUrls && timecardPhotoUrls[0] && timecardPhotoUrls[0].url,\n  //   );\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, []);\n\n  return (\n    <div>\n      <Image\n        src={getImageUrl()}\n        alt=\"Worker-uploaded timecard image.\"\n        fluid\n      ></Image>\n\n      <Pagination>\n        <Pagination.Prev onClick={handleClickNext} disabled={active === 1} />\n        {pageItems}\n        <Pagination.Next\n          onClick={handleClickPrev}\n          disabled={active === timecardPhotoUrls.length}\n        ></Pagination.Next>\n      </Pagination>\n    </div>\n  );\n};\n\nexport default ImageViewer;\n","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button, ButtonGroup } from 'react-bootstrap';\nimport Inspector from './Inspector';\nimport ImageViewer from './ImageViewer';\nimport { useLocation } from 'react-router-dom';\nimport { useAuth } from 'use-auth';\nimport { fetchOneTimecard } from 'api';\n\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nconst ViewTimecard = (props) => {\n  const [tc, setTc] = useState(null);\n  const [count, setCount] = useState(0);\n  const auth = useAuth();\n  const query = useQuery();\n\n  useEffect(() => {\n    let mounted = true;\n    console.log(count);\n    setCount(count + 1);\n    if (count > 1) return () => (mounted = false);\n    if (auth.token) {\n      const id = query.get('id');\n\n      fetchOneTimecard(id, auth.token).then((item) => {\n        console.log('Fetched one timecard...');\n        console.log(mounted);\n        console.log(JSON.stringify(Object.keys(item)));\n        if (mounted && item) {\n          setTc(item);\n        }\n      });\n    }\n    return () => (mounted = false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (tc)\n    return (\n      <Container fluid>\n        <Row>\n          <Col>\n            <ImageViewer timecardPhotoUrls={tc.timecardPhotoUrls}></ImageViewer>\n          </Col>\n          <Col>\n            <Inspector tc={tc}></Inspector>\n          </Col>\n          <Col xs={1}>\n            <ButtonGroup vertical>\n              <Button variant=\"success\">Approve</Button>\n              <Button variant=\"warning\">Reject</Button>\n              <Button variant=\"primary\">Edit</Button>\n              <Button variant=\"danger\">Remove</Button>\n              <Button variant=\"secondary\">Cancel</Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n      </Container>\n    );\n  else return null;\n};\n\nexport default ViewTimecard;\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory, useLocation, withRouter } from 'react-router-dom';\nimport { useAuth } from 'use-auth';\n// import './Login.css';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const location = useLocation();\n  const auth = useAuth();\n  // @ts-ignore\n  const { from } = location.state || { from: { pathname: '/' } };\n\n  const validateForm = () => {\n    return email.length > 0 && password.length > 0;\n  };\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n\n    // POST login request\n    await auth.signin(email, password);\n\n    // Redirect on successful login\n    history.replace(from);\n  };\n\n  return (\n    <div className=\"Login\">\n      <p>You must log in to view the page at {from.pathname}</p>\n      <Form onSubmit={handleLogin}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default withRouter(Login);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useAuth } from './use-auth';\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nconst PrivateRoute = ({ children, ...rest }) => {\n  let auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { useAuth } from './use-auth';\n\nconst AuthButton = () => {\n  let history = useHistory();\n  let auth = useAuth();\n\n  return auth.user ? (\n    <p style={{ color: 'white' }}>\n      Welcome!{' '}\n      <Button\n        variant=\"danger\"\n        onClick={() => {\n          auth.signout(() => history.push('/'));\n        }}\n      >\n        Sign out\n      </Button>\n    </p>\n  ) : (\n    <p style={{ color: 'white' }}>You are not logged in.</p>\n  );\n};\n\nexport default AuthButton;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboard } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\n\nconst CopyButton = ({ text }) => {\n  const updateClipboard = async (newClip) => {\n    try {\n      navigator.clipboard.writeText(newClip);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"outline-secondary\"\n        size=\"sm\"\n        onClick={() => updateClipboard(text)}\n      >\n        <FontAwesomeIcon icon={faClipboard} />\n      </Button>\n    </>\n  );\n};\n\nexport default CopyButton;\n","export const updateClipboard = async (newClip) => {\n  try {\n    navigator.clipboard.writeText(newClip);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const postData = async (url = \"\", data = {}) => {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    // mode: \"cors\", // no-cors, *cors, same-origin\n    // cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    // credentials: \"same-origin\", // include, *same-origin, omit\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n};\n","import React from 'react';\n\nconst queryString = (params) =>\n  Object.keys(params)\n    .map((key) => key + '=' + params[key])\n    .join('&');\n\nconst formatDate = (d = new Date()) =>\n  (d.getMonth() + 1).toString().padStart(2, '0') +\n  '/' +\n  d.getDate().toString().padStart(2, '0') +\n  '/' +\n  d.getFullYear();\n\nconst getQueryString = () => {\n  const endDate = new Date();\n  const startDate = new Date(endDate.getTime() - 12 * 24 * 60 * 60 * 1000);\n  const query = {\n    startDate: formatDate(startDate),\n    endDate: formatDate(endDate),\n    type: 'HOURLY',\n    status: 'submitted,confirmed,preapproved',\n    dateRangeType: 'workDate',\n  };\n  return queryString(query);\n};\n\nconst BookerUrl = ({ displayText }) => (\n  <a\n    href={'https://www.snapnursebooker.com/admin/timecards?' + getQueryString()}\n    target=\"_blank\"\n    rel=\"noreferrer\"\n  >\n    {displayText}\n  </a>\n);\n\nexport default BookerUrl;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport CopyButton from './CopyButton';\nimport { updateClipboard, postData } from './lib';\nimport BookerUrl from './BookerUrl';\nimport Loader from 'react-loader-spinner';\n\nconst downloadToFile = (content, filename, contentType) => {\n  const a = document.createElement('a');\n  const file = new Blob([content], { type: contentType });\n\n  a.href = URL.createObjectURL(file);\n  a.download = filename;\n  a.click();\n\n  URL.revokeObjectURL(a.href);\n};\n\nfunction HolidayPay() {\n  const date = '2021-01-01'; // Hardcoded for New Year's 2021: TODO: make it use nearest holiday or all holidays\n  const [output, setOutput] = useState('');\n  const [approvalNeeded, setApprovalNeeded] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickDownload = () => {\n    const filename =\n      'Holiday Pay Adjustments' + new Date().toISOString() + '.csv';\n    downloadToFile(output, filename, 'text/csv');\n  };\n\n  const uploadFile = (event) => {\n    clearData();\n    setIsLoading(true);\n    const fileObj = event.target.files[0]; // We've not allowed multiple files.\n    const reader = new FileReader();\n\n    try {\n      reader.readAsText(fileObj); // read the filek\n    } catch (e) {\n      setIsLoading(false);\n      console.log(e);\n    }\n\n    reader.onload = async () => {\n      console.log('POSTING...');\n      const url = 'https://lraulin.pythonanywhere.com/holiday';\n      const reqBody = {\n        date,\n        csv: reader.result,\n      };\n      console.log(JSON.stringify(reqBody));\n      const { csv, super_admin_list } = await postData(url, reqBody);\n      setOutput(csv);\n      localStorage.setItem('output', csv);\n      if (super_admin_list.length) {\n        setApprovalNeeded(super_admin_list);\n        localStorage.setItem(\n          'super_admin_list',\n          JSON.stringify(super_admin_list),\n        );\n      }\n      setIsLoading(false);\n    };\n\n    reader.onerror = () => {\n      setIsLoading(false);\n      console.log(reader.error);\n    };\n  };\n\n  const clearData = () => {\n    setOutput('');\n    setApprovalNeeded([]);\n    localStorage.removeItem('output');\n    localStorage.removeItem('super_admin_list');\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    const data = localStorage.getItem('output');\n    try {\n      const super_admin_list = JSON.parse(\n        localStorage.getItem('super_admin_list'),\n      );\n      if (data) {\n        setOutput(data);\n      }\n      if (super_admin_list && super_admin_list.length) {\n        setApprovalNeeded(super_admin_list);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n    setIsLoading(false);\n  }, []);\n\n  const handleNameClick = (name) => {\n    updateClipboard(name);\n    setApprovalNeeded(approvalNeeded.filter((n) => n !== name));\n  };\n\n  const table = isLoading ? (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={9000} //9 secs\n    />\n  ) : output ? (\n    <div id=\"outputDisplay\">\n      <div>\n        <em>{output.split('\\n').length - 3} Total Timecards</em>\n      </div>\n\n      <div className=\"float-right\">\n        <Button variant=\"danger\" onClick={clearData}>\n          Reset\n        </Button>\n        <Button variant=\"info\" onClick={handleClickDownload}>\n          Download\n        </Button>\n      </div>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Created At</th>\n            <th>Worker</th>\n            <th>Start Time</th>\n            <th>End Time</th>\n            <th>Total Hours</th>\n            <th>Overtime</th>\n            <th>Pay Rate</th>\n            <th>Memo</th>\n            <th>Adjustment</th>\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {output\n            .split('\\n')\n            .slice(1)\n            .map((line) => {\n              const [\n                num,\n                created,\n                name,\n                start,\n                end,\n                hrs,\n                ot,\n                rate,\n                hol,\n                pay,\n                total,\n              ] = line.split(',');\n              const style =\n                Number.parseFloat(total) >= 2000 ? { color: 'red' } : {};\n              return (\n                <tr style={style}>\n                  {(() => (\n                    <>\n                      <td>{num}</td>\n                      <td>{created}</td>\n                      <td>\n                        {name}\n                        <div className=\"float-right\">\n                          <CopyButton text={name} />\n                        </div>\n                      </td>\n                      <td>{start}</td>\n                      <td>{end}</td>\n                      <td>{hrs}</td>\n                      <td>{ot}</td>\n                      <td>${rate}</td>\n                      <td>\n                        {hol} HOL\n                        <div className=\"float-right\">\n                          <CopyButton text={hol + ' HOL'} />\n                        </div>\n                      </td>\n                      <td>\n                        ${pay}\n                        <div className=\"float-right\">\n                          <CopyButton\n                            text={Number.parseFloat(pay).toFixed(2)}\n                          />\n                        </div>\n                      </td>\n                      <td>${total}</td>\n                    </>\n                  ))()}\n                </tr>\n              );\n            })}\n        </tbody>\n      </Table>\n    </div>\n  ) : null;\n\n  return (\n    <div className=\"App\">\n      Follow <BookerUrl displayText=\"this link\" /> and click \"Export CSV\".\n      <Form>\n        <Form.Group>\n          <Form.File\n            id=\"fileChooser\"\n            label=\"Select the downloaded text file in your Downloads folder.\"\n            multiple={false}\n            accept=\".csv,.txt,text/csv,text/plain\"\n            onChange={(event) => uploadFile(event)}\n          />\n        </Form.Group>\n      </Form>\n      {approvalNeeded.length ? (\n        <>\n          <h3>Admin Approval Needed For ({approvalNeeded.length}):</h3>\n          {approvalNeeded.map((name) => (\n            <span onClick={() => handleNameClick(name)}>{name},</span>\n          ))}\n        </>\n      ) : null}\n      {table}\n    </div>\n  );\n}\n\nexport default HolidayPay;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from 'react-router-dom';\nimport './App.css';\nimport Timecards from './Timecards';\nimport ViewTimecard from './ViewTimecard';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Login from './Login';\nimport { ProvideAuth } from './use-auth';\nimport PrivateRoute from './PrivateRoute';\nimport AuthButton from './AuthButton';\nimport HolidayPay from 'HolidayPay';\n\nconst App = () => {\n  return (\n    <ProvideAuth>\n      <Router basename=\"/my-booker\">\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"\">Navbar</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={NavLink} to=\"/timecards\">\n              Timecards\n            </Nav.Link>\n            <Nav.Link as={NavLink} to=\"/holiday-pay-calculator\">\n              Holiday Pay Calculator\n            </Nav.Link>\n            <a\n              className=\"nav-link\"\n              href=\"https://chat.google.com/u/1/room/AAAA1tx9m64\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Team Chat\n            </a>\n            <a\n              className=\"nav-link\"\n              href=\"https://snapnurse.paymint.today/worker/timecards\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Internal Payroll\n            </a>\n            <a\n              className=\"nav-link\"\n              href=\"https://mail.google.com/mail/u/1/#inbox\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Gmail\n            </a>\n          </Nav>\n          <AuthButton />\n        </Navbar>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <PrivateRoute path=\"/timecards\" exact>\n            <Timecards />\n          </PrivateRoute>\n          <PrivateRoute path=\"/timecards/view\">\n            <ViewTimecard />\n          </PrivateRoute>\n          <Route path=\"/holiday-pay-calculator\">\n            <HolidayPay />\n          </Route>\n        </Switch>\n      </Router>\n    </ProvideAuth>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}