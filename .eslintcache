[{"/Users/leeraulin/Projects/snapnurse/my-booker/src/index.js":"1","/Users/leeraulin/Projects/snapnurse/my-booker/src/App.js":"2","/Users/leeraulin/Projects/snapnurse/my-booker/src/reportWebVitals.js":"3","/Users/leeraulin/Projects/snapnurse/my-booker/src/ViewTimecard.js":"4","/Users/leeraulin/Projects/snapnurse/my-booker/src/api.js":"5","/Users/leeraulin/Projects/snapnurse/my-booker/src/Timecards.js":"6","/Users/leeraulin/Projects/snapnurse/my-booker/src/Login.jsx":"7","/Users/leeraulin/Projects/snapnurse/my-booker/src/ImageViewer.js":"8","/Users/leeraulin/Projects/snapnurse/my-booker/src/Inspector.js":"9","/Users/leeraulin/Projects/snapnurse/my-booker/src/use-auth.js":"10","/Users/leeraulin/Projects/snapnurse/my-booker/src/PrivateRoute.jsx":"11"},{"size":500,"mtime":1610063755680,"results":"12","hashOfConfig":"13"},{"size":1718,"mtime":1610203912485,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610063755681,"results":"15","hashOfConfig":"13"},{"size":528,"mtime":1610201523901,"results":"16","hashOfConfig":"13"},{"size":1696,"mtime":1610402564901,"results":"17","hashOfConfig":"13"},{"size":3130,"mtime":1610405119392,"results":"18","hashOfConfig":"13"},{"size":1645,"mtime":1610399920766,"results":"19","hashOfConfig":"13"},{"size":553,"mtime":1610063755679,"results":"20","hashOfConfig":"13"},{"size":7028,"mtime":1610063755679,"results":"21","hashOfConfig":"13"},{"size":1356,"mtime":1610403283714,"results":"22","hashOfConfig":"13"},{"size":617,"mtime":1610202795263,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1sipa11",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/leeraulin/Projects/snapnurse/my-booker/src/index.js",[],["49","50"],"/Users/leeraulin/Projects/snapnurse/my-booker/src/App.js",["51","52","53"],"import React, { useContext, useState, createContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n  NavLink,\n} from 'react-router-dom';\nimport './App.css';\nimport Timecards from './Timecards';\nimport ViewTimecard from './ViewTimecard';\nimport { Button, Nav, Navbar } from 'react-bootstrap';\nimport Login from './Login';\nimport { ProvideAuth, useAuth } from './use-auth';\nimport PrivateRoute from './PrivateRoute';\n\nconst App = () => {\n  return (\n    <ProvideAuth>\n      <Router>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={NavLink} to=\"/timecards\">\n              Timecards\n            </Nav.Link>\n          </Nav>\n          <AuthButton />\n        </Navbar>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <PrivateRoute path=\"/timecards\" exact>\n            <Timecards />\n          </PrivateRoute>\n          <PrivateRoute path=\"/timecards/view\">\n            <ViewTimecard />\n          </PrivateRoute>\n        </Switch>\n      </Router>\n    </ProvideAuth>\n  );\n};\n\n/** For more details on\n * `authContext`, `ProvideAuth`, `useAuth` and `useProvideAuth`\n * refer to: https://usehooks.com/useAuth/\n */\n\nconst AuthButton = () => {\n  let history = useHistory();\n  let auth = useAuth();\n\n  return auth.user ? (\n    <p style={{ color: 'white' }}>\n      Welcome!{' '}\n      <Button\n        variant=\"danger\"\n        onClick={() => {\n          auth.signout(() => history.push('/'));\n        }}\n      >\n        Sign out\n      </Button>\n    </p>\n  ) : (\n    <p style={{ color: 'white' }}>You are not logged in.</p>\n  );\n};\n\nexport default App;\n","/Users/leeraulin/Projects/snapnurse/my-booker/src/reportWebVitals.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/ViewTimecard.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/api.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/Timecards.js",["54","55","56","57","58"],"/Users/leeraulin/Projects/snapnurse/my-booker/src/Login.jsx",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/ImageViewer.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/Inspector.js",["59","60","61","62","63","64","65"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\n\nconst getWorkerName = (tc) =>\n  tc.user ? tc.user.firstName + \" \" + tc.user.lastName : \"\";\n\nconst getPayRates = ({ timecardPayRate }) => {\n  if (!timecardPayRate) return \"\";\n  const {\n    description,\n    payRate,\n    overtimePayRate,\n    doubletimePayRate,\n  } = timecardPayRate;\n  return `${description}\\n${payRate} / ${doubletimePayRate} / ${overtimePayRate}`;\n};\n\nconst Inspector = ({ tc }) => {\n  const [viewCard, setViewCard] = useState(tc);\n  const [rate, setRate] = useState(tc.adjustment);\n  const [newNonTaxableAdjustment, setNewNonTaxableAdjustment] = useState(\n    tc.nonTaxableAdjustment\n  );\n  const [newMemo, setNewMemo] = useState(tc.memo);\n\n  useEffect(() => {\n    setViewCard(tc);\n  }, [tc]);\n\n  return (\n    <Form>\n      <Form.Group as={Row} controlId=\"formType\">\n        <Form.Label column sm=\"2\">\n          Type\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={tc.type} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formShiftDescription\">\n        <Form.Label column sm=\"2\">\n          Shift Description\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue=\"...\" />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formFacility\">\n        <Form.Label column sm=\"2\">\n          Facility\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue={tc.facility && tc.facility.name}\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formUnitNumber\">\n        <Form.Label column sm=\"2\">\n          Unit Number\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={tc.unitNumber} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formFacilityManager\">\n        <Form.Label column sm=\"2\">\n          Facility Manager\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={tc.facilityManager} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formPayRateDescription\">\n        <Form.Label column sm=\"2\">\n          Pay Rate Description\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue={tc.timecardPayRate && tc.timecardPayRate.description}\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formWorker\">\n        <Form.Label column sm=\"2\">\n          Worker\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={getWorkerName(tc)} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formStartShift\">\n        <Form.Label column sm=\"2\">\n          Start Shift\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={tc.startTime} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formEndShift\">\n        <Form.Label column sm=\"2\">\n          End Shift\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={tc.endTime} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formLunch\">\n        <Form.Label column sm=\"2\">\n          Lunch\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={tc.lunchInMinutes} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formRegularHours\">\n        <Form.Label column sm=\"2\">\n          Regular Hours\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue=\"???\" />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formOvertimeHours\">\n        <Form.Label column sm=\"2\">\n          Overtime Hours\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={tc.overtimeHours} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formTotalHoursWorked\">\n        <Form.Label column sm=\"2\">\n          Total Hours Worked\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue=\"email@example.com\" />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formRate\">\n        <Form.Label column sm=\"2\">\n          Rate\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={getPayRates(tc)} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formRegularPay\">\n        <Form.Label column sm=\"2\">\n          Regular Pay\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={tc.amount} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formOvertimePay\">\n        <Form.Label column sm=\"2\">\n          Overtime Pay\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={tc.overtimeAmount} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formNonTaxableAdjustment\">\n        <Form.Label column sm=\"2\">\n          Non Taxable Adjustment\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control defaultValue=\"Set non taxable adjustment for a worker\" />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formAdjustment\">\n        <Form.Label column sm=\"2\">\n          Adjustment\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue=\"Set adjustment if needed\"\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formMemo\">\n        <Form.Label column sm=\"2\">\n          Memo\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue=\"Additional notes can be here\"\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formStipend\">\n        <Form.Label column sm=\"2\">\n          Stipend(Pro-Rated)\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control\n            plaintext\n            readOnly\n            defaultValue={\"$\" + tc.stipendPaymentAmount}\n          />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"formTotal\">\n        <Form.Label column sm=\"2\">\n          Total\n        </Form.Label>\n        <Col sm=\"10\">\n          <Form.Control plaintext readOnly defaultValue={\"$\" + tc.total} />\n        </Col>\n      </Form.Group>\n      <Button variant=\"success\">Approve</Button>\n      <Button variant=\"primary\">Edit</Button>\n      <Button variant=\"secondary\">Cancel</Button>\n      <Button variant=\"danger\">Remove</Button>\n    </Form>\n  );\n};\n\nexport default Inspector;\n","/Users/leeraulin/Projects/snapnurse/my-booker/src/use-auth.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/PrivateRoute.jsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":27},{"ruleId":"70","severity":1,"message":"74","line":1,"column":29,"nodeType":"72","messageId":"73","endLine":1,"endColumn":37},{"ruleId":"70","severity":1,"message":"75","line":1,"column":39,"nodeType":"72","messageId":"73","endLine":1,"endColumn":52},{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":27},{"ruleId":"70","severity":1,"message":"76","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":16},{"ruleId":"70","severity":1,"message":"77","line":7,"column":7,"nodeType":"72","messageId":"73","endLine":7,"endColumn":18},{"ruleId":"70","severity":1,"message":"78","line":54,"column":9,"nodeType":"72","messageId":"73","endLine":54,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":89,"column":6,"nodeType":"81","endLine":89,"endColumn":8,"suggestions":"82"},{"ruleId":"70","severity":1,"message":"83","line":19,"column":10,"nodeType":"72","messageId":"73","endLine":19,"endColumn":18},{"ruleId":"70","severity":1,"message":"84","line":20,"column":10,"nodeType":"72","messageId":"73","endLine":20,"endColumn":14},{"ruleId":"70","severity":1,"message":"85","line":20,"column":16,"nodeType":"72","messageId":"73","endLine":20,"endColumn":23},{"ruleId":"70","severity":1,"message":"86","line":21,"column":10,"nodeType":"72","messageId":"73","endLine":21,"endColumn":33},{"ruleId":"70","severity":1,"message":"87","line":21,"column":35,"nodeType":"72","messageId":"73","endLine":21,"endColumn":61},{"ruleId":"70","severity":1,"message":"88","line":24,"column":10,"nodeType":"72","messageId":"73","endLine":24,"endColumn":17},{"ruleId":"70","severity":1,"message":"89","line":24,"column":19,"nodeType":"72","messageId":"73","endLine":24,"endColumn":29},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'createContext' is defined but never used.","'Button' is defined but never used.","'getUserName' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth.token'. Either include it or remove the dependency array.","ArrayExpression",["92"],"'viewCard' is assigned a value but never used.","'rate' is assigned a value but never used.","'setRate' is assigned a value but never used.","'newNonTaxableAdjustment' is assigned a value but never used.","'setNewNonTaxableAdjustment' is assigned a value but never used.","'newMemo' is assigned a value but never used.","'setNewMemo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [auth.token]",{"range":"95","text":"96"},[2405,2407],"[auth.token]"]