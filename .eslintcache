[{"C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\index.js":"1","C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\App.js":"2","C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\reportWebVitals.js":"3","C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\api.js":"4","C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\Timecards.js":"5","C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\ViewTimecard.js":"6","C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\Inspector.js":"7","C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\ImageViewer.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":1467,"mtime":1609371390630,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":496,"mtime":1609200646715,"results":"13","hashOfConfig":"10"},{"size":2906,"mtime":1609371298498,"results":"14","hashOfConfig":"10"},{"size":569,"mtime":1609368492202,"results":"15","hashOfConfig":"10"},{"size":7276,"mtime":1609369187702,"results":"16","hashOfConfig":"10"},{"size":575,"mtime":1609368381344,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"7u5wou",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\index.js",[],["36","37"],"C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\App.js",[],"C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\reportWebVitals.js",[],"C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\api.js",[],"C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\Timecards.js",[],"C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\ViewTimecard.js",[],"C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\Inspector.js",["38","39","40","41","42","43","44"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nconst getWorkerName = (tc) =>\r\n  tc.user ? tc.user.firstName + \" \" + tc.user.lastName : \"\";\r\n\r\nconst getPayRates = ({ timecardPayRate }) => {\r\n  if (!timecardPayRate) return \"\";\r\n  const {\r\n    description,\r\n    payRate,\r\n    overtimePayRate,\r\n    doubletimePayRate,\r\n  } = timecardPayRate;\r\n  return `${description}\\n${payRate} / ${doubletimePayRate} / ${overtimePayRate}`;\r\n};\r\n\r\nconst Inspector = ({ tc }) => {\r\n  const [viewCard, setViewCard] = useState(tc);\r\n  const [rate, setRate] = useState(tc.adjustment);\r\n  const [newNonTaxableAdjustment, setNewNonTaxableAdjustment] = useState(\r\n    tc.nonTaxableAdjustment\r\n  );\r\n  const [newMemo, setNewMemo] = useState(tc.memo);\r\n\r\n  useEffect(() => {\r\n    setViewCard(tc);\r\n  }, [tc]);\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Group as={Row} controlId=\"formType\">\r\n        <Form.Label column sm=\"2\">\r\n          Type\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue={tc.type} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formShiftDescription\">\r\n        <Form.Label column sm=\"2\">\r\n          Shift Description\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue=\"...\" />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formFacility\">\r\n        <Form.Label column sm=\"2\">\r\n          Facility\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control\r\n            plaintext\r\n            readOnly\r\n            defaultValue={tc.facility && tc.facility.name}\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formUnitNumber\">\r\n        <Form.Label column sm=\"2\">\r\n          Unit Number\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue={tc.unitNumber} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formFacilityManager\">\r\n        <Form.Label column sm=\"2\">\r\n          Facility Manager\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue={tc.facilityManager} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formPayRateDescription\">\r\n        <Form.Label column sm=\"2\">\r\n          Pay Rate Description\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control\r\n            plaintext\r\n            readOnly\r\n            defaultValue={tc.timecardPayRate && tc.timecardPayRate.description}\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formWorker\">\r\n        <Form.Label column sm=\"2\">\r\n          Worker\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue={getWorkerName(tc)} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formStartShift\">\r\n        <Form.Label column sm=\"2\">\r\n          Start Shift\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue={tc.startTime} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formEndShift\">\r\n        <Form.Label column sm=\"2\">\r\n          End Shift\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue={tc.endTime} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formLunch\">\r\n        <Form.Label column sm=\"2\">\r\n          Lunch\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue={tc.lunchInMinutes} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formRegularHours\">\r\n        <Form.Label column sm=\"2\">\r\n          Regular Hours\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue=\"???\" />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formOvertimeHours\">\r\n        <Form.Label column sm=\"2\">\r\n          Overtime Hours\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue={tc.overtimeHours} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formTotalHoursWorked\">\r\n        <Form.Label column sm=\"2\">\r\n          Total Hours Worked\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue=\"email@example.com\" />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formRate\">\r\n        <Form.Label column sm=\"2\">\r\n          Rate\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue={getPayRates(tc)} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formRegularPay\">\r\n        <Form.Label column sm=\"2\">\r\n          Regular Pay\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue={tc.amount} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formOvertimePay\">\r\n        <Form.Label column sm=\"2\">\r\n          Overtime Pay\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue={tc.overtimeAmount} />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formNonTaxableAdjustment\">\r\n        <Form.Label column sm=\"2\">\r\n          Non Taxable Adjustment\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control defaultValue=\"Set non taxable adjustment for a worker\" />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formAdjustment\">\r\n        <Form.Label column sm=\"2\">\r\n          Adjustment\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control\r\n            plaintext\r\n            readOnly\r\n            defaultValue=\"Set adjustment if needed\"\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formMemo\">\r\n        <Form.Label column sm=\"2\">\r\n          Memo\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control\r\n            plaintext\r\n            readOnly\r\n            defaultValue=\"Additional notes can be here\"\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formStipend\">\r\n        <Form.Label column sm=\"2\">\r\n          Stipend(Pro-Rated)\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control\r\n            plaintext\r\n            readOnly\r\n            defaultValue={\"$\" + tc.stipendPaymentAmount}\r\n          />\r\n        </Col>\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} controlId=\"formTotal\">\r\n        <Form.Label column sm=\"2\">\r\n          Total\r\n        </Form.Label>\r\n        <Col sm=\"10\">\r\n          <Form.Control plaintext readOnly defaultValue={\"$\" + tc.total} />\r\n        </Col>\r\n      </Form.Group>\r\n      <Button variant=\"success\">Approve</Button>\r\n      <Button variant=\"primary\">Edit</Button>\r\n      <Button variant=\"secondary\">Cancel</Button>\r\n      <Button variant=\"danger\">Remove</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Inspector;\r\n","C:\\Users\\Lee\\source\\repos\\snapnurse\\my-booker\\src\\ImageViewer.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":19,"column":10,"nodeType":"51","messageId":"52","endLine":19,"endColumn":18},{"ruleId":"49","severity":1,"message":"53","line":20,"column":10,"nodeType":"51","messageId":"52","endLine":20,"endColumn":14},{"ruleId":"49","severity":1,"message":"54","line":20,"column":16,"nodeType":"51","messageId":"52","endLine":20,"endColumn":23},{"ruleId":"49","severity":1,"message":"55","line":21,"column":10,"nodeType":"51","messageId":"52","endLine":21,"endColumn":33},{"ruleId":"49","severity":1,"message":"56","line":21,"column":35,"nodeType":"51","messageId":"52","endLine":21,"endColumn":61},{"ruleId":"49","severity":1,"message":"57","line":24,"column":10,"nodeType":"51","messageId":"52","endLine":24,"endColumn":17},{"ruleId":"49","severity":1,"message":"58","line":24,"column":19,"nodeType":"51","messageId":"52","endLine":24,"endColumn":29},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'viewCard' is assigned a value but never used.","Identifier","unusedVar","'rate' is assigned a value but never used.","'setRate' is assigned a value but never used.","'newNonTaxableAdjustment' is assigned a value but never used.","'setNewNonTaxableAdjustment' is assigned a value but never used.","'newMemo' is assigned a value but never used.","'setNewMemo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]