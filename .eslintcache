[{"/Users/leeraulin/Projects/snapnurse/my-booker/src/index.js":"1","/Users/leeraulin/Projects/snapnurse/my-booker/src/App.js":"2","/Users/leeraulin/Projects/snapnurse/my-booker/src/reportWebVitals.js":"3","/Users/leeraulin/Projects/snapnurse/my-booker/src/ViewTimecard.js":"4","/Users/leeraulin/Projects/snapnurse/my-booker/src/api.js":"5","/Users/leeraulin/Projects/snapnurse/my-booker/src/Timecards.js":"6","/Users/leeraulin/Projects/snapnurse/my-booker/src/Login.jsx":"7","/Users/leeraulin/Projects/snapnurse/my-booker/src/ImageViewer.js":"8","/Users/leeraulin/Projects/snapnurse/my-booker/src/Inspector.js":"9","/Users/leeraulin/Projects/snapnurse/my-booker/src/use-auth.js":"10","/Users/leeraulin/Projects/snapnurse/my-booker/src/PrivateRoute.jsx":"11"},{"size":500,"mtime":1610063755680,"results":"12","hashOfConfig":"13"},{"size":1677,"mtime":1611409842591,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610063755681,"results":"15","hashOfConfig":"13"},{"size":1872,"mtime":1611589719037,"results":"16","hashOfConfig":"13"},{"size":3902,"mtime":1611580860081,"results":"17","hashOfConfig":"13"},{"size":4468,"mtime":1611424824480,"results":"18","hashOfConfig":"13"},{"size":1686,"mtime":1610582609156,"results":"19","hashOfConfig":"13"},{"size":1490,"mtime":1610659613848,"results":"20","hashOfConfig":"13"},{"size":8122,"mtime":1611589404610,"results":"21","hashOfConfig":"13"},{"size":1380,"mtime":1610991355356,"results":"22","hashOfConfig":"13"},{"size":617,"mtime":1610202795263,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1sipa11",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/leeraulin/Projects/snapnurse/my-booker/src/index.js",[],["48","49"],"/Users/leeraulin/Projects/snapnurse/my-booker/src/App.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/reportWebVitals.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/ViewTimecard.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/api.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/Timecards.js",["50"],"import React, { useEffect, useState } from 'react';\nimport { Button, Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { fetchTimecards, fetchAllTimecards } from './api';\nimport { useAuth } from './use-auth';\n\nconst getUserName = (tc) =>\n  tc.user && tc.user.firstName + ' ' + tc.user.lastName;\n\nconst float = (str) => Number.parseFloat(str) || 0;\n\nconst getTotalAmount = (tc) =>\n  float(\n    (\n      float(tc.amount) +\n      float(tc.overtimeAmount) +\n      float(tc.doubletimeAmount) +\n      float(tc.stipendPaymentAmount)\n    ).toFixed(2),\n  );\n\nconst details = ({\n  workDate,\n  startTime,\n  endTime,\n  lunchInMinutes,\n  overtimeHours,\n  weeklyHours,\n}) =>\n  `${workDate}\n  ${startTime} - ${endTime}\n  ${lunchInMinutes} min lunch\n  Overtime hours=${overtimeHours}\n  Weekly hours=${weeklyHours}`;\n\nconst confirmed = ({ confirmUserId, confirmedAt }) =>\n  confirmUserId ? `User #${confirmUserId} on ${confirmedAt}` : '';\n\nconst approved = ({ approvedUserId, approvedAt }) =>\n  approvedUserId ? `User #${approvedUserId} on ${approvedAt}` : '';\n\nconst payRates = ({ timecardPayRate }) => {\n  if (!timecardPayRate) return '';\n  const {\n    description,\n    payRate,\n    overtimePayRate,\n    doubletimePayRate,\n  } = timecardPayRate;\n  return `${description}\\n${payRate} / ${doubletimePayRate} / ${overtimePayRate}`;\n};\n\nconst stipends = ({\n  stipendPaymentAmount,\n  stipendRuleAmount,\n  stipendRuleDays,\n}) => {\n  if (!stipendRuleAmount) return '';\n  return `$${stipendPaymentAmount}\n  $${stipendRuleAmount} / ${stipendRuleDays}`;\n};\n\nconst Timecards = () => {\n  const [timecards, setTimecards] = useState([]);\n  const history = useHistory();\n  const auth = useAuth();\n  // const history = useHistory();\n\n  const handleClick = (tc) => {\n    console.log(tc.timecardid);\n    console.log(tc);\n    history.push('/timecards/view?id=' + tc.id);\n  };\n\n  useEffect(() => {\n    let mounted = true;\n    if (auth.token) {\n      // fetchTimecards(auth.token).then((res) => {\n      //   if (mounted && res.data) {\n      //     setTimecards(res.data);\n      //   } else if (res.message && res.message.includes('Token expired')) {\n      //     console.log('Token expired. Signing out...');\n      //     auth.signout();\n      //   }\n      // });\n      fetchAllTimecards({ authorization: auth.token }).then((res) => {\n        if (mounted && res.success) {\n          setTimecards(res.timecards);\n        } else if (res.tokenExpired) {\n          console.log('Token expired. Signing out...');\n          auth.signout();\n        }\n      });\n    }\n    return () => (mounted = false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const row = (tc) =>\n    tc ? (\n      <tr key={tc.id}>\n        <td>{tc.workDate}</td>\n        <td>{tc.createdAt}</td>\n        <td>{getUserName(tc)}</td>\n        <td>{details(tc)}</td>\n        <td>{tc.memo}</td>\n        <td>{confirmed(tc)}</td>\n        <td>{approved(tc)}</td>\n        <td>{payRates(tc)}</td>\n        <td>{tc.agency}</td>\n        <td>{tc.type}</td>\n        <td>{tc.status}</td>\n        <td>{tc.timecardPhotoUrls ? tc.timecardPhotoUrls.length : ''}</td>\n        <td>{stipends(tc)}</td>\n        <td>${getTotalAmount(tc)}</td>\n        <td>\n          <Button variant=\"primary\" onClick={() => handleClick(tc)}></Button>\n        </td>\n      </tr>\n    ) : null;\n\n  return (\n    <div>\n      <section id=\"timecardStats\">\n        <p>Total Shown: {timecards.length}</p>\n        <p>\n          Admin Approvals:{' '}\n          {timecards.filter((t) => getTotalAmount(t) >= 2000).length}\n        </p>\n        <p>\n          Zero-Hour:{' '}\n          {\n            timecards.filter(\n              (t) => getTotalAmount(t) <= float(t.stipendPaymentAmount),\n            ).length\n          }\n        </p>\n      </section>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            {[\n              'Work Date',\n              'Created At',\n              'Worker',\n              'Details',\n              'Memo',\n              'Confirmed',\n              'Approved',\n              'Pay Rates',\n              'Agency',\n              'Type',\n              'Status',\n              'Image',\n              'Stipend',\n              'Total',\n              'Inspect',\n            ].map((header) => (\n              <th>{header}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>{timecards.map((tc) => row(tc))}</tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Timecards;\n","/Users/leeraulin/Projects/snapnurse/my-booker/src/Login.jsx",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/ImageViewer.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/Inspector.js",["51"],"/Users/leeraulin/Projects/snapnurse/my-booker/src/use-auth.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/PrivateRoute.jsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":4,"column":10,"nodeType":"58","messageId":"59","endLine":4,"endColumn":24},{"ruleId":"56","severity":1,"message":"60","line":2,"column":26,"nodeType":"58","messageId":"59","endLine":2,"endColumn":32},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'fetchTimecards' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]