[{"/Users/leeraulin/Projects/snapnurse/my-booker/src/index.js":"1","/Users/leeraulin/Projects/snapnurse/my-booker/src/App.js":"2","/Users/leeraulin/Projects/snapnurse/my-booker/src/reportWebVitals.js":"3","/Users/leeraulin/Projects/snapnurse/my-booker/src/ViewTimecard.js":"4","/Users/leeraulin/Projects/snapnurse/my-booker/src/api.js":"5","/Users/leeraulin/Projects/snapnurse/my-booker/src/Timecards.js":"6","/Users/leeraulin/Projects/snapnurse/my-booker/src/Login.jsx":"7","/Users/leeraulin/Projects/snapnurse/my-booker/src/ImageViewer.js":"8","/Users/leeraulin/Projects/snapnurse/my-booker/src/Inspector.js":"9","/Users/leeraulin/Projects/snapnurse/my-booker/src/use-auth.js":"10","/Users/leeraulin/Projects/snapnurse/my-booker/src/PrivateRoute.jsx":"11","/Users/leeraulin/Projects/snapnurse/my-booker/src/AuthButton.js":"12","/Users/leeraulin/Projects/snapnurse/my-booker/src/HolidayPay.js":"13","/Users/leeraulin/Projects/snapnurse/my-booker/src/lib.js":"14","/Users/leeraulin/Projects/snapnurse/my-booker/src/BookerUrl.jsx":"15","/Users/leeraulin/Projects/snapnurse/my-booker/src/CopyButton.jsx":"16"},{"size":500,"mtime":1610063755680,"results":"17","hashOfConfig":"18"},{"size":2135,"mtime":1613692461326,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610063755681,"results":"20","hashOfConfig":"18"},{"size":1872,"mtime":1611589719037,"results":"21","hashOfConfig":"18"},{"size":5822,"mtime":1616002596967,"results":"22","hashOfConfig":"18"},{"size":7936,"mtime":1615834832322,"results":"23","hashOfConfig":"18"},{"size":1686,"mtime":1610582609156,"results":"24","hashOfConfig":"18"},{"size":1490,"mtime":1610659613848,"results":"25","hashOfConfig":"18"},{"size":8114,"mtime":1613692799283,"results":"26","hashOfConfig":"18"},{"size":1380,"mtime":1610991355356,"results":"27","hashOfConfig":"18"},{"size":617,"mtime":1610202795263,"results":"28","hashOfConfig":"18"},{"size":594,"mtime":1612462837589,"results":"29","hashOfConfig":"18"},{"size":6521,"mtime":1612739467548,"results":"30","hashOfConfig":"18"},{"size":871,"mtime":1612462837590,"results":"31","hashOfConfig":"18"},{"size":902,"mtime":1612462837589,"results":"32","hashOfConfig":"18"},{"size":641,"mtime":1612462837589,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1352dox",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/leeraulin/Projects/snapnurse/my-booker/src/index.js",[],["68","69"],"/Users/leeraulin/Projects/snapnurse/my-booker/src/App.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/reportWebVitals.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/ViewTimecard.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/api.js",["70"],"/Users/leeraulin/Projects/snapnurse/my-booker/src/Timecards.js",["71","72"],"import React, { useEffect, useState } from 'react';\nimport { Button, Container, Row, Spinner, Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { fetchFacilities, fetchTimecards } from './api';\nimport { useAuth } from './use-auth';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport DatePicker from 'react-datepicker';\nimport { AsyncTypeahead, ClearButton } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst getUserName = (tc) =>\n  tc.user && tc.user.firstName + ' ' + tc.user.lastName;\n\nconst float = (str) => Number.parseFloat(str) || 0;\n\nconst getTotalAmount = (tc) =>\n  float((float(tc.amount) + float(tc.stipendPaymentAmount)).toFixed(2));\n\n// Filter predicate\nconst isSuperAdmin = (timecard) => getTotalAmount(timecard) >= 2000;\n\nconst details = ({\n  startTime,\n  endTime,\n  lunchInMinutes,\n  overtimeHours,\n  doubletimeHours,\n  weeklyHours,\n}) => (\n  <>\n    <div>\n      <strong>Start: </strong>\n      {startTime}\n    </div>\n    <div>\n      <strong>Stop: </strong>\n      {endTime}\n    </div>\n    <div>\n      <strong>Lunch: </strong>\n      {lunchInMinutes}\n    </div>\n    <div>\n      <strong>Overtime hours: </strong>\n      {overtimeHours}\n    </div>\n    {Number.parseFloat(doubletimeHours) ? (\n      <div>\n        <strong>Overtime hours: </strong>\n        {doubletimeHours}\n      </div>\n    ) : null}\n\n    <div>\n      <strong>Weekly hours: </strong>\n      {weeklyHours}\n    </div>\n  </>\n);\n\nconst payRates = ({ timecardPayRate }) => {\n  if (!timecardPayRate) return '';\n  const {\n    description,\n    payRate,\n    overtimePayRate,\n    doubletimePayRate,\n  } = timecardPayRate;\n  return `${description}\\n${payRate} / ${doubletimePayRate} / ${overtimePayRate}`;\n};\n\n/**\n * COMPONENT\n */\nfunction Timecards() {\n  const [timecards, setTimecards] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [superOnly, setSuperOnly] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [endDate, setEndDate] = useState(new Date());\n  const [updated, setUpdated] = useState(null);\n  const [selectedFacility, setSelectedFacility] = useState([]);\n  const [facilities, setFacilities] = useState([]);\n  const [facilitiesAreLoading, setFacilitiesAreLoading] = useState(false);\n  const history = useHistory();\n  const auth = useAuth();\n\n  const refresh = () => {\n    setIsLoading(true);\n    fetchTimecards({\n      authorization: auth.token,\n      end: endDate,\n      page: page - 1,\n      facilityId: selectedFacility.length ? selectedFacility[0].id : null,\n    }).then((res) => {\n      const newUpdated = new Date();\n      if (res.data && res.hasOwnProperty('total')) {\n        localStorage.setItem('timecards', JSON.stringify(res.data));\n        localStorage.setItem('total', JSON.stringify(res.total));\n        localStorage.setItem('updated', newUpdated.toISOString());\n        setTimecards(res.data);\n        setTotal(res.total);\n        setUpdated(newUpdated);\n      } else if (res.name === 'Forbidden') {\n        console.log('Token expired. Signing out...');\n        auth.signout();\n        history.push('/login');\n      } else {\n        console.log('Problem fetching timecards...');\n        console.log(res);\n      }\n      setIsLoading(false);\n    });\n  };\n\n  const toggleSuperOnly = () => setSuperOnly(!superOnly);\n\n  useEffect(() => {\n    const tcs = JSON.parse(localStorage.getItem('timecards'));\n    if (tcs && tcs.length) {\n      setTimecards(tcs);\n      setTotal(Number.parseInt(localStorage.getItem('total')));\n      setUpdated(new Date(localStorage.getItem('updated')));\n    }\n  }, []);\n\n  const row = (tc) =>\n    tc ? (\n      <tr key={tc.id}>\n        <td>{tc.workDate}</td>\n        <td>{tc.createdAt}</td>\n        <td>{getUserName(tc)}</td>\n        <td>{details(tc)}</td>\n        <td>{payRates(tc)}</td>\n        <td>\n          <a href=\"#\" onClick={(e) => handleClickFacility(e, tc.facility)}>\n            {tc.facility.name}\n          </a>\n        </td>\n        <td>{tc.type}</td>\n        <td>{tc.status}</td>\n        <td>{tc.timecardPhotoUrls ? tc.timecardPhotoUrls.length : ''}</td>\n        <td>${getTotalAmount(tc)}</td>\n        <td>\n          <Button onClick={() => history.push('/timecards/view?id=' + tc.id)}>\n            Actions\n          </Button>\n          <a\n            href={`https://app.snapnurse.com/admin/timecards?type=HOURLY&dateRangeType=workDate&page=1&userId=${tc.userId}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            onClick={() =>\n              setTimecards(timecards.filter((t) => t.userId !== tc.userId))\n            }\n            style={tc.visited ? { color: 'red' } : null}\n          >\n            Open in Booker\n          </a>\n        </td>\n      </tr>\n    ) : null;\n\n  const table = isLoading ? (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  ) : (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          {[\n            'Work Date',\n            'Created At',\n            'Worker',\n            'Details',\n            'Pay Rates',\n            'Facility',\n            'Type',\n            'Status',\n            'Images',\n            'Total',\n            'Inspect',\n          ].map((header) => (\n            <th>{header}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {superOnly\n          ? timecards.filter(isSuperAdmin).map(row)\n          : timecards.map(row)}\n      </tbody>\n    </Table>\n  );\n\n  const lastPage = Math.ceil(total / 100);\n\n  const handleClickFacility = (e, facility) => {\n    e.preventDefault();\n    setSelectedFacility([facility]);\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <span>End Date: </span>\n        <DatePicker\n          selected={endDate}\n          onChange={(date) => {\n            setEndDate(date);\n          }}\n        />\n        <span style={{ marginRight: '1em' }}></span>\n        <span>Page: </span>\n        <input\n          type=\"number\"\n          value={page}\n          min=\"1\"\n          max={lastPage || 1}\n          onChange={(e) => setPage(Number.parseInt(e.target.value))}\n        ></input>\n        <span style={{ marginRight: '1em' }}>of {lastPage}</span>\n        <p>Facility: </p>\n        <AsyncTypeahead\n          id=\"facilityTypeahead\"\n          isLoading={facilitiesAreLoading}\n          labelKey=\"name\"\n          selected={selectedFacility}\n          onChange={(selected) => {\n            console.log('Facility selected');\n            console.log(selected[0]);\n            setSelectedFacility(selected);\n          }}\n          onSearch={(query) => {\n            setFacilitiesAreLoading(true);\n            fetchFacilities(query, auth.token).then((data) => {\n              setFacilities(data);\n              setFacilitiesAreLoading(false);\n            });\n          }}\n          options={facilities}\n          style={{ width: '38em' }}\n        >\n          {({ onClear, selected }) => (\n            <div className=\"rbt-aux\">\n              {!!selected.length && <ClearButton onClick={onClear} />}\n            </div>\n          )}\n        </AsyncTypeahead>\n        <Button onClick={refresh}>Fetch Timecards</Button>\n        <Button variant=\"secondary\" onClick={toggleSuperOnly}>\n          Show {superOnly ? 'All Timecards' : 'Only Super Admin'}\n        </Button>\n      </Row>\n      <section id=\"timecardStats\">\n        <span style={{ paddingRight: '3em' }}>Total Timecards: {total}</span>\n        <span style={{ paddingRight: '3em' }}>\n          Admin Approvals (this page):{' '}\n          {timecards ? timecards.filter(isSuperAdmin).length : 0}\n        </span>\n        {updated ? <span>Last Updated: {updated.toLocaleString()}</span> : null}\n      </section>\n      {table}\n    </Container>\n  );\n}\n\nexport default Timecards;\n","/Users/leeraulin/Projects/snapnurse/my-booker/src/Login.jsx",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/ImageViewer.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/Inspector.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/use-auth.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/PrivateRoute.jsx",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/AuthButton.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/HolidayPay.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/lib.js",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/BookerUrl.jsx",[],"/Users/leeraulin/Projects/snapnurse/my-booker/src/CopyButton.jsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":140,"column":7,"nodeType":"79","messageId":"80","endLine":140,"endColumn":15},{"ruleId":"77","severity":1,"message":"81","line":2,"column":34,"nodeType":"79","messageId":"80","endLine":2,"endColumn":41},{"ruleId":"82","severity":1,"message":"83","line":140,"column":11,"nodeType":"84","endLine":140,"endColumn":76},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'postData' is assigned a value but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]